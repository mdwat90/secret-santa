{"version":3,"sources":["actions/UserActions.js","actions/types.js","Components/Navbar/index.js","Components/Register/index.js","Components/Login/index.js","Components/Profile/index.js","actions/GroupActions.js","Components/Groups/CreateGroup.js","Components/Groups/JoinGroup.js","Components/Groups/MyGroups.js","Components/Groups/index.js","Components/WishList/index.js","App.js","serviceWorker.js","reducers/UserReducer.js","reducers/GroupReducer.js","reducers/index.js","index.js"],"names":["login","payload","type","connectionError","error","userExistsError","useStyles","makeStyles","root","background","link","marginRight","lastLink","flexGrow","logout","color","title","mapDispatchToProps","logOut","Nav","connect","state","user","user_info","loggedIn","new_user","props","classes","useState","activeTab","setTab","AppBar","position","className","Toolbar","Typography","to","style","textDecoration","onClick","height","width","backgroundColor","Button","Register","registerUser","data","component","axios","post","name","toLowerCase","trim","email","password","then","response","_id","setState","loading","catch","prevProps","this","history","push","Box","Grid","container","justify","item","xl","lg","md","xs","Container","form","initialValues","confirmPassword","validate","values","errors","onSubmit","setSubmitting","handleChange","touched","handleBlur","handleSubmit","isSubmitting","variant","TextField","required","id","label","placeholder","onChange","onBlur","value","textInput","marginBottom","marginTop","CircularProgress","button","userExistsErr","paddingTop","connectionErr","Component","RegisterScreen","withStyles","margin","textAlign","paddingBottom","borderRadius","borderBottomColor","border","boxShadow","padding","Login","loginUser","get","params","loginError","loginErr","LoginScreen","Profile","openAddForm","addItemForm","closeAddForm","editForm","itemToUpdate","description","notes","updateItemForm","closeEditForm","expandPanel","panel","panelOpen","preventDefault","event","getUserData","userId","user_id","res","addNewItem","match","linkError","deleteFromDB","idTodelete","delete","updateDB","idToUpdate","update","formError","length","map","index","key","ExpansionPanel","expanded","ExpansionPanelSummary","expandIcon","aria-controls","heading","Link","href","target","direction","icon","ExpansionPanelDetails","details","buttonText","Dialog","open","onClose","aria-labelledby","DialogTitle","DialogContent","autoFocus","fullWidth","e","multiline","DialogActions","cancelButton","disabled","ProfileScreen","fontSize","borderColor","createGroupSuccess","joinGroupSuccess","CreateGroup","createGroup","console","log","admin","adminName","adminEmail","memberCount","groupCreated","setTimeout","groupExistsError","groupExistsErr","fontWeight","CreateGroupScreen","group","JoinGroup","uid","groupJoined","joinGroupError","joinGroupErr","JoinGroupScreen","Groups","openOptionsMenu","anchorEl","currentTarget","groupId","getAttribute","closeOptionsMenu","openDeleteModal","memberId","deleteUserModal","deleteUid","closeDeleteModal","openRemoveModal","removeUserModal","closeRemoveModal","openResetDrawingModal","resetDrawingModal","closeResetDrawingModal","openDeleteGroupModal","deleteGroupModal","closeDeleteGroupModal","getUserGroups","userGroups","getSelectedUsersData","selectedUsersData","deleteGroup","clearSelections","removingMember","group_id","removeMember","drawName","selectedUserId","selectedUserName","selectUserErr","registrationError","wrap","spacing","idx","upperCaseGroup","replace","c","toUpperCase","Card","card","minHeight","flex","right","bottom","groupid","aria-haspopup","Menu","keepMounted","transformOrigin","horizontal","vertical","Boolean","MenuItem","alignContent","alignItems","members","member","selectedBy","Chip","onDelete","subText","uidSelected","drawButton","pathname","cursor","m","aria-describedby","DialogContentText","GroupsScreen","deleteIcon","borderWidth","display","getUsersGroups","path","render","MyGroups","WishList","userName","location","upperCaseName","WishListScreen","PrivateRoute","rest","from","Main","basename","exact","App","dispatch","window","hostname","initialState","combineReducers","action","Object","assign","store","createStore","XmasApp","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.06ff1d2b.chunk.js","sourcesContent":["import * as type from \"./types\";\n\nexport const login = (payload) => ({\n    type: type.SET_USER_INFO,\n    payload\n});\n\nexport const logOut = () => ({\n    type: type.LOGOUT_USER,\n    payload:'logout'\n});\n\nexport const loginError = (error) => ({\n    type: type.LOGIN_ERROR,\n    payload: error\n});\n\nexport const connectionError = (error) => ({\n    type: type.CONNECTION_ERROR,\n    payload: error\n});\n\nexport const userExistsError = () => ({\n    type: type.USER_EXISTS_ERROR,\n    payload: 'error'\n});","//AUTH ACTIONS\nexport const SET_USER_INFO = 'SET_USER_INFO';\nexport const LOGOUT_USER = 'LOGOUT_USER';\nexport const LOGIN_ERROR = 'LOGIN_ERROR';\nexport const CONNECTION_ERROR = 'CONNECTION_ERROR';\nexport const USER_EXISTS_ERROR = 'USER_EXISTS_ERROR';\n\n// GROUP ACTIONS\nexport const CREATE_GROUP_SUCCESS = 'CREATE_GROUP_SUCCESS';\nexport const JOIN_GROUP_SUCCESS = 'JOIN_GROUP_SUCCESS';\nexport const GROUP_EXISTS_ERROR = 'GROUP_EXISTS_ERROR';\nexport const JOIN_GROUP_ERROR  = 'JOIN_GROUP_ERROR';","import React, {Component, useState } from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from \"react-router-dom\";\nimport { makeStyles } from '@material-ui/styles';\nimport { AppBar, Button,Typography, Toolbar } from '@material-ui/core';\nimport { logOut } from '../../actions/UserActions';\n\n\nconst useStyles = makeStyles({\n    root: {\n        background: '#4f92ff'\n    },\n    link: {\n        marginRight: 10\n    },\n    lastLink: {\n        flexGrow: 1\n    },\n    logout: {\n        color: 'white'\n    },\n    title: {\n        marginRight: 20,\n        color:'#ff476f',\n        // fontSize: '1.5vw'\n    }\n  });\n\n\nfunction Navbar(props) {\n    const classes = useStyles();\n\n    const { logOut } = props;\n\n    const [activeTab, setTab] = useState('Groups');\n\n    // console.log('ACTIVE TAB::', activeTab)\n\n    // console.log('NAVBAR PROPS:', props)\n    return (\n        <AppBar position={'sticky'} className={classes.root}>\n            <Toolbar>\n                {/* <Typography className={classes.title}>\n                    XMAS\n                </Typography> */}\n                \n                <div className={classes.link}>\n                    <Typography>\n                        <Link to=\"/Profile\" style={{ textDecoration: 'none', color: 'white' }} onClick={() => setTab('Profile')}>My List</Link>\n                    </Typography>\n                        {activeTab === 'Profile' ?\n                            <div style={{height: '2px', width:'52px', backgroundColor: 'white'}} />\n                        :\n                            <div style={{height: '2px'}} />\n                        }\n                </div>\n                \n                <div  className={classes.lastLink}>\n                    <Typography>\n                        <Link to=\"/\" style={{ textDecoration: 'none', color: 'white' }} onClick={() => setTab('Groups')}>My Groups</Link>\n                    </Typography>\n                        {activeTab === 'Groups' ?\n                            <div style={{height: '2px', width:'80px', backgroundColor: 'white'}} />\n                        :\n                            <div style={{height: '2px'}} />\n                        }\n                </div>\n               \n                \n                <Button onClick={() => logOut()} className={classes.logout}>Logout</Button>\n            </Toolbar>\n        </AppBar>\n    ) \n}\n\nconst mapStateToProps = state => {\n    const { user: {user_info, loggedIn, new_user} } = state;\n    return {\n      user_info: user_info,\n      loggedIn: loggedIn,\n      new_user: new_user\n    }\n  }\n\n  const mapDispatchToProps = {\n    logOut\n  }\n  \n  \n  const Nav = connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(Navbar);\n  \n  \n\nexport default Nav;","import React, {Component} from 'react';\nimport { Formik } from 'formik';\nimport axios from 'axios';\nimport { connect } from 'react-redux';\nimport { Link } from \"react-router-dom\";\nimport { login, userExistsError, connectionError } from '../../actions/UserActions';\nimport { withStyles } from '@material-ui/styles';\nimport { Button, Container, Box, Typography, TextField, CircularProgress, Grid } from '@material-ui/core';\n\nconst styles = {\n  root: {\n    background: '#4f92ff',\n    margin: 'auto',\n    height: '100vh',\n    paddingTop: '15vh'\n  },\n  form: {\n    background: '#fff',\n    textAlign: 'center',\n    paddingBottom: '5vh',\n    borderRadius: 5\n  },\n  title: {\n    paddingTop: '5vh',\n  },\n  link: {\n    margin: '2vh',\n  },\n  textInput: {\n    margin: '1vh',\n    width: '80%',\n    '& label.Mui-focused': {\n      color: '#4f92ff',\n    },\n    '& .MuiInput-underline:after': {\n      borderBottomColor: '#4f92ff',\n    },\n    // '& .MuiOutlinedInput-root': {\n    //   '& fieldset': {\n    //     borderColor: 'red',\n    //   },\n    //   '&:hover fieldset': {\n    //     borderColor: 'yellow',\n    //   },\n    //   '&.Mui-focused fieldset': {\n    //     borderColor: 'green',\n    //   },\n    // }\n  },\n  button: {\n    background: 'linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)',\n    border: 0,\n    borderRadius: 3,\n    boxShadow: '0 3px 5px 2px rgba(255, 105, 135, .3)',\n    color: 'white',\n    height: 48,\n    width: '25%',\n    padding: '0 30px',\n    margin: '5vh'\n  },\n};\n\nclass Register extends Component {\n  constructor(props) {\n    super(props)\n    this.state={\n      loading: false\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    if(prevProps.loggedIn !== this.props.loggedIn) {\n      this.props.history.push('/groups/my-groups')\n    }\n  }\n\n  registerUser = (data) => {\n    const component = this;\n\n    // console.log('REGISTER DATA:', data)\n\n    axios.post('http://localhost:3001/api/newUser', {\n      data : {\n        name: data.name.toLowerCase().trim(),\n        email: data.email.toLowerCase().trim(),\n        password: data.password.trim()\n      }\n    })\n    .then(function (response) {\n      // console.log('AXIOS RESPONSE:', response)\n      if(response.data._id){\n        component.props.login(response.data)\n      }\n      else if(!response.data._id){\n        component.props.userExistsError();\n        component.setState({\n          loading: false\n        })\n      }\n    })\n    .catch(function (error) {\n      // console.log('AXIOS ERROR:', error)\n      component.props.connectionError(error);\n      component.setState({\n        loading: false\n      })\n    })\n  }\n\n  render() {\n    const { classes } = this.props;\n    return (\n      this.props.loggedIn ?\n          <div>\n            <h3>You've already registered!</h3>\n            <p>Click \"Profile\" to see your profile, or \"Groups\" to see your groups.</p>\n          </div>\n        :\n        <Box className={classes.root} >\n          <Grid container justify={'center'}>\n            <Grid item xl ={6} lg={6} md={6} xs={10}>\n                  <Container className={classes.form}>\n                    <Formik\n                      initialValues={{ name: '', email: '', password: '', confirmPassword: ''}}\n                      validate={values => {\n                        let errors = {};\n                        if (!values.name) {\n                          errors.name = 'Required';\n                        } \n                        if (values.password !== values.confirmPassword) {\n                          errors.confirmPassword = 'Passwords do not match';\n                        } \n                        return errors;\n                      }}\n                      onSubmit={(values, { setSubmitting }) => {\n                        this.registerUser(values);\n                        this.setState({\n                          loading: true\n                        })\n                      }}\n                    >\n                      {({\n                        values,\n                        errors,\n                        touched,\n                        handleChange,\n                        handleBlur,\n                        handleSubmit,\n                        isSubmitting\n                      }) => (\n                        <form onSubmit={handleSubmit}>\n                            <Typography variant='h4' className={classes.title}>Register</Typography>\n                          <div>\n                            {/* <Typography variant='h5' className={classes.title}>Name</Typography> */}\n                            <TextField\n                              required\n                              type=\"name\"\n                              name=\"name\"\n                              id=\"standard-required\"\n                              label=\"First Name\"\n                              placeholder={'First Name'}\n                              onChange={handleChange}\n                              onBlur={handleBlur}\n                              value={values.name}\n                              className={classes.textInput}\n                            />\n                          </div>\n                          {/* <div>\n                            <Typography style={{color: 'red'}}>{errors.name}</Typography>\n                          </div> */}\n                          \n                          <div>\n                            {/* <Typography variant='h5' className={classes.title}>Name</Typography> */}\n                            <TextField\n                              required\n                              type=\"email\"\n                              name=\"email\"\n                              id=\"standard-required\"\n                              label=\"Email\"\n                              placeholder={'Email'}\n                              onChange={handleChange}\n                              onBlur={handleBlur}\n                              value={values.email}\n                              className={classes.textInput}\n                            />\n                          </div>\n                          {/* <div>\n                            <Typography style={{color: 'red'}}>{errors.name}</Typography>\n                          </div> */}\n\n                          <div>\n                            {/* <Typography variant='h5' className={classes.title}>Password</Typography> */}\n                            <TextField\n                              required\n                              type=\"password\"\n                              name=\"password\"\n                              id=\"standard-password-input\"\n                              label=\"Password\"\n                              placeholder={'Password'}\n                              onChange={handleChange}\n                              onBlur={handleBlur}\n                              value={values.password}\n                              className={classes.textInput}\n                            />\n                          </div>\n                          <div>\n                            <Typography style={{color: 'red'}}>{errors.password}</Typography>\n                          </div>\n\n                          <div>\n                            {/* <Typography variant='h5' className={classes.title}>Confirm Password</Typography> */}\n                            <TextField\n                                required\n                                type=\"password\"\n                                name=\"confirmPassword\"\n                                id=\"standard-password-input\"\n                                label=\"Password\"\n                                placeholder={'Password'}\n                                onChange={handleChange}\n                                onBlur={handleBlur}\n                                value={values.confirmPassword}\n                                className={classes.textInput}\n                              />\n                          </div>\n                          <div>\n                            <Typography style={{color: 'red'}}>{errors.confirmPassword}</Typography>\n                          </div>\n\n                          <div>\n                            {this.state.loading ? \n                              <Container style={{height: 48, marginBottom: '5vh', marginTop: '5vh'}}>\n                                <CircularProgress style={{color:'#ff476f'}} />\n                              </Container>\n                              :\n                              <Button type=\"submit\" className={classes.button}>\n                                Register\n                              </Button>\n                            }\n                          </div>\n                        </form>\n                      )}\n                    </Formik>\n\n                    <Typography>\n                      <Link to=\"/\" className={classes.link} style={{ textDecoration: 'none', color: '#4f92ff' }}>Login to Account</Link>\n                    </Typography>\n                    \n                    {/* {this.props.history.action === \"REPLACE\" ?\n                        <div>\n                          <h2>PLEASE SIGN IN</h2>\n                        </div>\n                        :\n                        null\n                    } */}\n                    {this.props.userExistsErr ?\n                        <div>\n                          <Typography variant='h6' style={{paddingTop: '4vh', color: 'red'}}>USER ALREADY EXISTS</Typography>\n                        </div>\n                        :\n                        null\n                    }\n                    {this.props.connectionErr ?\n                    <div>\n                      <Typography variant='h6' style={{paddingTop: '4vh', color: 'red'}}>ERROR CONNECTING TO DATABASE</Typography>\n                    </div>\n                    :\n                    null\n                }\n              </Container>\n            </Grid>\n          </Grid>\n    </Box>  \n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  const { user: {user_info, loggedIn, userExistsErr, connectionErr } } = state;\n\n  return {\n    user_info: user_info,\n    loggedIn: loggedIn,\n    userExistsErr: userExistsErr,\n    connectionErr: connectionErr\n  }\n}\n\nconst mapDispatchToProps = {\n  login,\n  userExistsError,\n  connectionError\n}\n\n\nconst RegisterScreen = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Register);\n\n\nexport default withStyles(styles)(RegisterScreen);","import React, {Component} from 'react';\nimport { Formik } from 'formik';\nimport axios from 'axios';\nimport { connect } from 'react-redux';\nimport { Link } from \"react-router-dom\";\nimport { login, loginError, connectionError} from '../../actions/UserActions';\nimport { withStyles } from '@material-ui/styles';\nimport { Button, Container, Box, Typography, TextField, CircularProgress, Grid } from '@material-ui/core';\n\n\nconst styles = {\n  root: {\n    background: '#4f92ff',\n    margin: 'auto',\n    height: '100vh',\n    paddingTop: '15vh'\n  },\n  form: {\n    background: '#fff',\n    textAlign: 'center',\n    paddingBottom: '5vh',\n    borderRadius: 5\n  },\n  title: {\n    paddingTop: '5vh',\n  },\n  link: {\n    margin: '2vh',\n  },\n  textInput: {\n    margin: '2vh',\n    width: '80%',\n    '& label.Mui-focused': {\n      color: '#4f92ff',\n    },\n    '& .MuiInput-underline:after': {\n      borderBottomColor: '#4f92ff',\n    },\n    // '& .MuiOutlinedInput-root': {\n    //   '& fieldset': {\n    //     borderColor: 'red',\n    //   },\n    //   '&:hover fieldset': {\n    //     borderColor: 'yellow',\n    //   },\n    //   '&.Mui-focused fieldset': {\n    //     borderColor: 'green',\n    //   },\n    // }\n  },\n  button: {\n    background: 'linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)',\n    border: 0,\n    borderRadius: 3,\n    boxShadow: '0 3px 5px 2px rgba(255, 105, 135, .3)',\n    color: 'white',\n    height: 48,\n    width: '25%',\n    padding: '0 30px',\n    margin: '5vh'\n  },\n};\n\nclass Login extends Component {\n  constructor(props) {\n    super(props)\n    this.state={\n      loading: false\n    }\n  }\n\n  loginUser = (data) => {\n    const component = this;\n\n    // console.log('USER LOGIN DATA:', data)\n\n    axios.get('http://localhost:3001/api/user', {\n      params: {\n        email: data.email.toLowerCase().trim(),\n        password: data.password.trim()\n      }\n    })\n    .then(function (response) {\n      // console.log('AXIOS RESPONSE:', response)\n      if(response.data._id){\n        component.props.login(response.data)\n      }\n      else if(!response.data._id){\n        // console.log('LOGIN ERROR RESPONSE:', response)\n        component.props.loginError(response.data);\n        component.setState({\n          loading: false\n        })\n      }\n    })\n    .catch(function (error) {\n      component.props.connectionError(error);\n      component.setState({\n        loading: false\n      })\n    })\n  }\n\n  render() {\n    // console.log('HOME PROPS:', this.props)\n    const { classes } = this.props;\n    return (\n      <Box className={classes.root}>\n        <Grid container justify={'center'}>\n          <Grid item xl ={6} lg={6} md={6} xs={10}>\n              <Container className={classes.form} >\n                <Formik\n                  initialValues={{ email: '', password: '' }}\n                  validate={values => {\n                    let errors = {};\n                    if (!values.email) {\n                      errors.email = 'Required';\n                    }\n                    return errors;\n                  }}\n                  onSubmit={(values, { setSubmitting }) => {\n                    this.loginUser(values);\n                    this.setState({\n                      loading: true\n                    })\n                  }}\n                >\n                  {({\n                    values,\n                    errors,\n                    touched,\n                    handleChange,\n                    handleBlur,\n                    handleSubmit,\n                    isSubmitting\n                  }) => (\n                    <form onSubmit={handleSubmit}>\n                        <Typography variant='h4' className={classes.title}>Login</Typography>\n                      <div>\n                        {/* <Typography variant='h5' className={classes.title}>Name</Typography> */}\n                        <TextField\n                          type=\"email\"\n                          name=\"email\"\n                          id=\"standard-required\"\n                          label=\"Email\"\n                          placeholder={'Email'}\n                          onChange={handleChange}\n                          onBlur={handleBlur}\n                          value={values.email}\n                          className={classes.textInput}\n                        />\n                      </div>\n                      <div>\n                          <Typography style={{color: 'red'}}>{errors.email}</Typography>\n                      </div>\n\n                      <div>\n                      {/* <Typography variant='h5' className={classes.title}>Password</Typography> */}\n                          <TextField\n                            type=\"password\"\n                            name=\"password\"\n                            id=\"standard-password-input\"\n                            label=\"Password\"\n                            placeholder={'Password'}\n                            onChange={handleChange}\n                            onBlur={handleBlur}\n                            value={values.password}\n                            className={classes.textInput}\n                          />\n                      </div>\n                      <div>\n                        <Typography style={{color: 'red'}}>{errors.password}</Typography>\n                      </div>\n                      \n                      <div>\n                        {this.state.loading ? \n                          <Container style={{height: 48, marginBottom: '5vh', marginTop: '5vh'}}>\n                            <CircularProgress style={{color:'#ff476f'}}/>\n                          </Container>\n                          :\n                          <Button type=\"submit\" className={classes.button}>\n                            Login\n                          </Button>\n                        }\n                      </div>\n                    </form>\n                  )}\n                </Formik>\n\n                \n                <Typography>\n                  <Link to=\"/register\" className={classes.link} style={{ textDecoration: 'none', color: '#4f92ff' }}>Register Here</Link>\n                </Typography>\n            \n                {/* {this.props.history.action === \"REPLACE\" \n                ?\n                    <div>\n                      <h2>PLEASE SIGN IN</h2>\n                    </div>\n                    :\n                    null\n                } */}\n                {this.props.loginErr ?\n                    <div>\n                    <Typography variant='h6' style={{paddingTop: '3vh', color: 'red'}}>{this.props.loginErr}</Typography>\n                    </div>\n                    :\n                    null\n                }\n                {this.props.connectionErr ?\n                    <div>\n                    <Typography variant='h6' style={{paddingTop: '3vh', color: 'red'}}>ERROR CONNECTING TO DATABASE</Typography>\n                    </div>\n                    :\n                    null\n                }\n              </Container>\n          </Grid>\n        </Grid>\n      </Box>      \n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  const { user: {user_info, loggedIn, loginErr, connectionErr } } = state;\n\n  return {\n    user_info: user_info,\n    loggedIn: loggedIn,\n    loginErr: loginErr,\n    connectionErr: connectionErr\n  }\n}\n\nconst mapDispatchToProps = {\n  login,\n  loginError,\n  connectionError\n}\n\n\n\nconst LoginScreen = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Login);\n\n\nexport default withStyles(styles)(LoginScreen);","// /client/App.js\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport { Formik } from 'formik';\nimport { connect } from 'react-redux';\nimport { withStyles } from '@material-ui/styles';\nimport { \n  Button, \n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogContentText,\n  DialogTitle,\n  Container, \n  ExpansionPanel,\n  ExpansionPanelDetails,\n  ExpansionPanelSummary,\n  Box, \n  Link,\n  Grid,\n  Typography, \n  TextField, \n  CircularProgress\n} from '@material-ui/core';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport EditIcon from '@material-ui/icons/Edit';\n\n\nconst styles = {\n  root: {\n    background: '#fff',\n    margin: 'auto',\n    height: '100vh'\n  },\n  container: {\n    background: '#fff',\n    textAlign: 'center',\n    width: '75%',\n    marginTop: '5vh'\n  },\n  form: {\n    background: '#fff',\n    textAlign: 'center',\n    width: '50%',\n    height: '65vh',\n    borderRadius: 5\n  },\n  title: {\n    paddingTop: '5vh',\n  },\n  link: {\n    marginTop: '5vh',\n    color: '#4f92ff',\n    textDecoration: 'underline'\n  },\n  textInput: {\n    '& label.Mui-focused': {\n      color: '#4f92ff',\n    },\n    '& .MuiInput-underline:after': {\n      borderBottomColor: '#4f92ff',\n    },\n    // '& .MuiOutlinedInput-root': {\n    //   '& fieldset': {\n    //     borderColor: 'red',\n    //   },\n    //   '&:hover fieldset': {\n    //     borderColor: 'yellow',\n    //   },\n    //   '&.Mui-focused fieldset': {\n    //     borderColor: 'green',\n    //   },\n    // }\n  },\n  heading: {\n    // fontSize: '3vh'\n  },\n  details: {\n    backgroundColor: '#d1d1d1'\n  },\n  icon: {\n    marginRight: '1vw',\n    fontSize: '20px',\n    color: '#8f8f8f'\n  },\n  button: {\n    borderColor: '#4f92ff', \n    color: '#4f92ff'\n  },\n  cancelButton: {\n    color: '#6b6b6b'\n  }\n};\n\nclass Profile extends Component {\n  // initialize our state\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: [],\n      user_id: null,\n      description: null,\n      link: null,\n      notes: null,\n      itemToUpdate: null,\n      updateItemForm: false,\n      addItemForm: false,\n      formError: false,\n      panel: null,\n      panelOpen: false,\n      linkError: false,\n      loading: false\n    }\n  }\n\n  componentDidMount() {\n    // console.log('PROFILE PROPS:', this.props)\n\n    this.setState({\n      user_id: this.props.user_info._id\n    }, () => {\n      this.getUserData(this.state.user_id);\n      // this.getSelectedUsersData(this.state.selectedUserId);\n    })\n  }\n \n  // componentDidUpdate(prevProps) {\n  //   if(this.props !== prevProps) {\n  //     console.log('PROFILE NEW PROPS:', this.props)\n  //   }\n  // }\n\n  openAddForm = () => {\n    this.setState({\n      addItemForm: true\n    })\n  }\n  \n  closeAddForm = () => {\n    this.setState({\n      addItemForm: false\n    })\n  }\n  \n  editForm = (item) => {\n    // console.log('ITEM TO UPDATE:', item)\n    this.setState({\n      itemToUpdate: item._id,\n      description: item.description,\n      link: item.link,\n      notes: item.notes,\n      updateItemForm: true\n    })\n  }\n  \n  \n  closeEditForm = () => {\n    this.setState({\n      updateItemForm: false\n    })\n  }\n\n  expandPanel = (panel) => {\n    this.setState({\n      panel: panel,\n      panelOpen: !this.state.panelOpen\n    })\n  }\n  \n  preventDefault = event => event.preventDefault();\n\n\n  getUserData= (userId) => {\n    this.setState({\n      loading: true\n    })\n\n    axios.get('http://localhost:3001/api/getItems', {\n      params: {\n        user_id: userId\n      }\n    })\n      .then((res) => this.setState({ data: res.data, loading: false }))\n  };\n\n\n  addNewItem = (description, link, notes) => {\n    let component = this;\n\n    if(link) {\n      var validateLink = link.match(/^(https?\\:)\\/\\/(([^:\\/?#]*)(?:\\:([0-9]+))?)([\\/]{0,1}[^?#]*)(\\?[^#]*|)(#.*|)$/);\n      if(validateLink === null) {\n        // console.log('NOT A VALID LINK')\n        this.setState({\n          linkError: true\n        })\n      }\n      else {\n        // console.log('GOOD TO GO')\n        component.closeAddForm();\n  \n        this.setState({\n          linkError: false\n        })\n        axios.post('http://localhost:3001/api/newItem', {\n          user_id: this.props.user_info._id,\n          description: description,\n          link: link,\n          notes: notes\n        })\n        .then(function (response) {\n          // console.log('AXIOS RESPONSE:', response)\n          component.getUserData(component.props.user_info._id);\n        })\n        .catch(function (error) {\n          // console.log('AXIOS ERROR:', error)\n        });\n      }\n    }\n    else {\n      component.closeAddForm();\n\n        this.setState({\n          linkError: false\n        })\n        axios.post('http://localhost:3001/api/newItem', {\n          user_id: this.props.user_info._id,\n          description: description,\n          link: link,\n          notes: notes\n        })\n        .then(function (response) {\n          // console.log('AXIOS RESPONSE:', response)\n          component.getUserData(component.props.user_info._id);\n        })\n        .catch(function (error) {\n          // console.log('AXIOS ERROR:', error)\n        });\n    }\n  };\n\n\n  deleteFromDB = (idTodelete) => {\n    let component = this;\n    axios.delete('http://localhost:3001/api/deleteItem', {\n      data: {\n        _id: idTodelete,\n        user_id: this.props.user_info._id,\n      },\n    })\n    .then(function (response) {\n      // console.log('AXIOS RESPONSE:', response)\n      component.getUserData(component.props.user_info._id);\n    })\n    .catch(function (error) {\n      // console.log('AXIOS ERROR:', error)\n    })\n    ;\n  };\n\n  updateDB = (idToUpdate, description, link, notes) => {\n    let component = this;\n\n    // console.log('UPDATE ITEM:', idToUpdate)\n    // console.log('Description UPDATE:', description)\n    // console.log('LINK UPDATE:', link)\n    // console.log('NOTES UPDATE:', notes)\n\n    if(link) {\n      var validateLink = link.match(/^(https?\\:)\\/\\/(([^:\\/?#]*)(?:\\:([0-9]+))?)([\\/]{0,1}[^?#]*)(\\?[^#]*|)(#.*|)$/);\n      if(validateLink === null) {\n        // console.log('NOT A VALID LINK')\n        this.setState({\n          linkError: true\n        })\n      }\n      else {\n        // console.log('GOOD TO GO')\n        component.closeEditForm();\n  \n        this.setState({\n          linkError: false\n        })\n        axios.post('http://localhost:3001/api/updateItem', {\n          _id: idToUpdate,\n          user_id: this.props.user_info._id,\n          update: { description: description, link: link, notes: notes},\n        })\n        .then(function (response) {\n          // console.log('AXIOS RESPONSE:', response)\n          component.getUserData(component.props.user_info._id);\n        })\n        .catch(function (error) {\n          // console.log('AXIOS ERROR:', error)\n        });\n      }\n    }\n    else {\n      // console.log('GOOD TO GO')\n      component.closeEditForm();\n\n      axios.post('http://localhost:3001/api/updateItem', {\n        _id: idToUpdate,\n        user_id: this.props.user_info._id,\n        update: { description: description, link: link, notes: notes},\n      })\n      .then(function (response) {\n        // console.log('AXIOS RESPONSE:', response)\n        component.getUserData(component.props.user_info._id);\n      })\n      .catch(function (error) {\n        // console.log('AXIOS ERROR:', error)\n      })\n    }\n    \n  };\n\n\n  render() {\n    const { data } = this.state;\n    const { classes } = this.props;\n    return (\n      <div>\n        {this.state.loading ?\n          <Box className={classes.root}>\n            <Container className={classes.container} style={{marginTop: '10vh'}}>\n              <CircularProgress style={{color:'#ff476f'}} />\n            </Container>\n          </Box>\n          :\n          <Box className={classes.root}>\n            <Container className={classes.container}>\n              {data.length <= 0 ? \n                <Container style={{height: '10vh', marginTop: '10vh'}}>\n                  <Typography variant=\"h5\">You haven't added any items to your list</Typography>\n                </Container>\n                : \n                data.map((item, index) => (\n                  <div key={item._id}>\n                      <ExpansionPanel \n                        style={this.state.panel === item._id && this.state.panelOpen ? {marginBottom: '4vh'} : {marginBottom: '2vh'}} \n                        expanded={this.state.panel === item._id && this.state.panelOpen} \n                        onChange={() => this.expandPanel(item._id)}>\n                        <ExpansionPanelSummary\n                          expandIcon={<ExpandMoreIcon />}\n                          aria-controls=\"panel1bh-content\"\n                          id=\"panel1bh-header\"\n                        >\n                          <Grid container justify={'flex-start'}>\n                            <Typography className={classes.heading}>\n                              <Link href= {item.link} onClick={() => this.preventDefault} target={'_blank'} className={classes.link}>\n                                {item.description}\n                              </Link>\n                            </Typography>\n                          </Grid>\n                          <Grid container justify={'center'} direction={'column'}>\n                            <Grid container justify={'flex-end'}>\n                                <DeleteIcon onClick={() => this.deleteFromDB(item._id)} className={classes.icon}/>\n                                <EditIcon onClick={() => this.editForm(item)} className={classes.icon}/>\n                            </Grid>\n                          </Grid>\n                        </ExpansionPanelSummary>\n                        <ExpansionPanelDetails className={classes.details}>\n                          <Typography>\n                            {item.notes}\n                          </Typography>\n                        </ExpansionPanelDetails>\n                      </ExpansionPanel>\n                    </div>\n                ))\n              }\n\n                <Container style={data.length > 0 ? {marginTop: '5vh'} : null }>\n                  <Button variant=\"outlined\" className={classes.button} onClick={this.openAddForm}>\n                    <Typography className={classes.buttonText}>\n                      Add Item\n                    </Typography>\n                  </Button>\n                </Container>\n            </Container>\n\n\n            {/* Update Item Modal */}\n            <Dialog open={this.state.updateItemForm} onClose={this.closeEditForm} aria-labelledby=\"form-dialog-title\">\n              <DialogTitle id=\"form-dialog-title\">Update Item</DialogTitle>\n              <DialogContent>\n                {/* <DialogContentText>\n                  Add item details below\n                </DialogContentText> */}\n                <TextField\n                  required\n                  id=\"standard-required\"\n                  label={\"Item description\"}\n                  value={this.state.description}\n                  autoFocus\n                  margin=\"dense\"\n                  fullWidth\n                  className={classes.textInput}\n                  onChange={(e) => this.setState({ description: e.target.value })}\n                />\n                <TextField\n                  // required\n                  error={this.state.linkError ? true : false}\n                  id=\"standard-error\"\n                  margin=\"dense\"\n                  label={this.state.linkError ? \"Must be a valid link\": \"Item link\"}\n                  type=\"name\"\n                  fullWidth\n                  className={this.state.link && this.state.linkError ? null : classes.textInput}\n                  value={this.state.link}\n                  onChange={(e) => this.setState({ link: e.target.value })}\n                />\n                <TextField\n                  multiline={true}\n                  margin=\"dense\"\n                  label=\"Additional notes (sizes, colors, etc.)\"\n                  type=\"name\"\n                  fullWidth\n                  className={classes.textInput}\n                  value={this.state.notes}\n                  onChange={(e) => this.setState({ notes: e.target.value })}\n                />\n              </DialogContent>\n              <DialogActions>\n                <Button className={classes.cancelButton} onClick={() => this.closeEditForm()}>\n                  <Typography>\n                    Cancel\n                  </Typography>\n                </Button>\n                <Button \n                  className={classes.button}\n                  disabled={!this.state.description} \n                  onClick={() => this.updateDB(this.state.itemToUpdate, this.state.description, this.state.link, this.state.notes)} \n                  >\n                    <Typography>Update Item</Typography>\n                </Button>\n              </DialogActions>\n            </Dialog>\n\n\n            {/* Add Item Modal */}\n            <Dialog open={this.state.addItemForm} onClose={this.closeAddForm} aria-labelledby=\"form-dialog-title\">\n              <DialogTitle id=\"form-dialog-title\">Add Item</DialogTitle>\n              <DialogContent>\n                {/* <DialogContentText>\n                  Add item details below\n                </DialogContentText> */}\n                <TextField\n                  required\n                  id=\"standard-required\"\n                  label=\"Item description\"\n                  autoFocus\n                  margin=\"dense\"\n                  fullWidth\n                  className={classes.textInput}\n                  onChange={(e) => this.setState({ description: e.target.value })}\n                />\n                <TextField\n                  // required\n                  error={this.state.linkError ? true : false}\n                  id=\"standard-error\"\n                  margin=\"dense\"\n                  label={this.state.link && this.state.linkError ? \"Must be a valid link\": \"Item link\"}\n                  type=\"name\"\n                  fullWidth\n                  className={this.state.linkError ? null : classes.textInput}\n                  onChange={(e) => this.setState({ link: e.target.value })}\n                />\n                <TextField\n                  multiline={true}\n                  margin=\"dense\"\n                  label=\"Additional notes (sizes, colors, etc.)\"\n                  type=\"name\"\n                  fullWidth\n                  className={classes.textInput}\n                  onChange={(e) => this.setState({ notes: e.target.value })}\n                />\n              </DialogContent>\n              <DialogActions>\n                <Button className={classes.cancelButton} onClick={() => this.closeAddForm()}>\n                  <Typography>\n                    Cancel\n                  </Typography>\n                </Button>\n                <Button \n                  className={classes.button}\n                  disabled={!this.state.description} \n                  onClick={() => this.addNewItem(this.state.description, this.state.link, this.state.notes )} \n                  >\n                    <Typography>Add Item</Typography>\n                </Button>\n              </DialogActions>\n            </Dialog>\n          </Box>\n        }\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  const { user: {user_info, loggedIn} } = state;\n\n  return {\n    user_info: user_info, \n    loggedIn: loggedIn\n  }\n}\n\n\n\nconst ProfileScreen = connect(\n  mapStateToProps,\n  null\n)(Profile);\n\n\nexport default withStyles(styles)(ProfileScreen);","import * as type from \"./types\";\n\nexport const createGroupSuccess = () => ({\n    type: type.CREATE_GROUP_SUCCESS,\n    payload: null\n});\n\nexport const joinGroupSuccess = () => ({\n    type: type.JOIN_GROUP_SUCCESS,\n    payload: null\n});\n\nexport const groupExistsError = () => ({\n    type: type.GROUP_EXISTS_ERROR,\n    payload: 'error'\n});\n\nexport const joinGroupError = (error) => ({\n    type: type.JOIN_GROUP_ERROR,\n    payload: error\n});","import React, {Component} from 'react';\nimport { Formik } from 'formik';\nimport axios from 'axios';\nimport { connect } from 'react-redux';\nimport { connectionError } from '../../actions/UserActions';\nimport { groupExistsError, createGroupSuccess, joinGroupSuccess } from '../../actions/GroupActions';\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\nimport { withStyles } from '@material-ui/styles';\nimport { Button, Container, Box, Typography, TextField, Grid } from '@material-ui/core';\n\nconst styles = {\n  root: {\n    background: '#fff',\n    margin: 'auto',\n    // height: '100vh',\n    // paddingTop: '15vh'\n  },\n  form: {\n    background: '#fff',\n    textAlign: 'center',\n    borderRadius: 5\n  },\n  title: {\n    paddingTop: '5vh',\n  },\n  link: {\n    margin: '4vh',\n  },\n  textInput: {\n    margin: '1vh',\n    width: '80%',\n    '& label.Mui-focused': {\n      color: '#4f92ff',\n    },\n    '& .MuiInput-underline:after': {\n      borderBottomColor: '#4f92ff',\n    },\n    // '& .MuiOutlinedInput-root': {\n    //   '& fieldset': {\n    //     borderColor: 'red',\n    //   },\n    //   '&:hover fieldset': {\n    //     borderColor: 'yellow',\n    //   },\n    //   '&.Mui-focused fieldset': {\n    //     borderColor: 'green',\n    //   },\n    // }\n  },\n  button: {\n    background: 'linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)',\n    border: 0,\n    borderRadius: 3,\n    boxShadow: '0 3px 5px 2px rgba(255, 105, 135, .3)',\n    color: 'white',\n    height: 48,\n    // width: '25%',\n    padding: '0 30px',\n    margin: '5vh',\n    marginTop: '7vh'\n  },\n};\n\nclass CreateGroup extends Component {\n  constructor(props) {\n    super(props)\n    this.state={\n      groupCreated: false\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    if(prevProps.loggedIn !== this.props.loggedIn) {\n      this.props.history.push('/profile')\n    }\n  }\n\n  createGroup = (data) => {\n    const component = this;\n\n    console.log('CLIENT GROUP DATA:', data)\n\n    axios.post('http://localhost:3001/api/newGroup', {\n      data : {\n        admin: data.admin,\n        adminName: data.adminName,\n        adminEmail: data.adminEmail.toLowerCase().trim(),\n        confirmPassword: data.confirmPassword,\n        memberCount: data.memberCount,\n        name: data.name.toLowerCase().trim(),\n        password: data.password.trim()\n      }\n    })\n    .then(function (response) {\n      // console.log('AXIOS RESPONSE:', response)\n      if(response.data._id){\n        component.props.createGroupSuccess();\n        component.props.joinGroupSuccess();\n        component.setState({\n          groupCreated: !component.state.groupCreated\n        });\n        setTimeout(function() {\n          component.props.history.push('/groups/my-groups')\n        }, 1500)\n      }\n      else if(!response.data._id){\n        component.props.groupExistsError();\n      }\n    })\n    .catch(function (error) {\n      // console.log('AXIOS ERROR:', error)\n      component.props.connectionError(error);\n    })\n  }\n\n\n  render() {\n    const {user_info, classes} = this.props;\n\n    console.log('USER INFO:', user_info)\n\n    return (\n      this.state.groupCreated ? \n        <Container style={{ marginTop: '5vh'}}>\n          <Typography variant='h5'>Your group has been created!</Typography>\n        </Container>\n        :\n        <Box className={classes.root}>\n          <Grid container justify={'center'}>\n            <Grid item xl ={6} lg={7} md={10} xs={12}>\n              <Container className={classes.form}>\n                <Formik\n                  initialValues={{ admin: user_info._id, adminName: user_info.name, adminEmail: user_info.email, name: '', password: '', confirmPassword: '', memberCount: '' }}\n                  validate={values => {\n                    let errors = {};\n                    if (!values.name) {\n                      errors.name = 'Required';\n                    } \n                    if (!values.memberCount) {\n                      errors.memberCount = 'Required';\n                    } \n                    if (values.password !== values.confirmPassword) {\n                      errors.confirmPassword = 'Passwords do not match';\n                    } \n                    return errors;\n                  }}\n                  onSubmit={(values, { setSubmitting }) => {\n                    this.createGroup(values);\n                  }}\n                >\n                  {({\n                    values,\n                    errors,\n                    touched,\n                    handleChange,\n                    handleBlur,\n                    handleSubmit,\n                    isSubmitting\n                  }) => (\n                    <form onSubmit={handleSubmit}>\n                    {errors.admin}\n                      <Typography variant='h5' className={classes.title}>New Group</Typography>\n                      <div>\n                        {/* <Typography variant='h5' className={classes.title}>Group Name</Typography> */}\n                        <TextField\n                          required\n                          type=\"name\"\n                          name=\"name\"\n                          id=\"standard-required\"\n                          label=\"Group Name\"\n                          placeholder={'Group Name'}\n                          onChange={handleChange}\n                          onBlur={handleBlur}\n                          value={values.name}\n                          className={classes.textInput}\n                        />\n                      </div>\n                      <div>\n                        {/* <Typography style={{color: 'red'}}>{errors.name}</Typography> */}\n                      </div>\n\n                      <div>\n                        {/* <Typography variant='h5' className={classes.title}>Password</Typography> */}\n                        <TextField\n                          required\n                          type=\"password\"\n                          name=\"password\"\n                          id=\"standard-password-input\"\n                          label=\"Password\"\n                          placeholder={'Password'}\n                          onChange={handleChange}\n                          onBlur={handleBlur}\n                          value={values.password}\n                          className={classes.textInput}\n                        />\n                      </div>\n                      <div>\n                        {/* <Typography style={{color: 'red'}}>{errors.password}</Typography> */}\n                      </div>\n\n                      <div>\n                        {/* <Typography variant='h5' className={classes.title}>Confirm Password</Typography> */}\n                        <TextField\n                          required\n                          type=\"password\"\n                          name=\"confirmPassword\"\n                          id=\"standard-password-input\"\n                          label=\"Confirm Password\"\n                          placeholder={'Password'}\n                          onChange={handleChange}\n                          onBlur={handleBlur}\n                          value={values.confirmPassword}\n                          className={classes.textInput}\n                        />\n                      </div>\n                      <div>\n                        <Typography style={{color: 'red'}}>{errors.confirmPassword}</Typography>\n                      </div>\n\n                      <div>\n                        {/* <Typography variant='h5' className={classes.title}>Number of Members</Typography> */}\n                        <TextField\n                          required\n                          type=\"number\"\n                          name=\"memberCount\"\n                          id=\"standard-number\"\n                          label=\"Number of Members\"\n                          placeholder={'Number'}\n                          onChange={handleChange}\n                          onBlur={handleBlur}\n                          value={values.memberCount}\n                          className={classes.textInput}\n                        />\n                      </div>\n                      <div>\n                        {/* <Typography style={{color: 'red'}}>{errors.memberCount}</Typography> */}\n                      </div>\n                      <div>\n                        <Button type=\"submit\" className={classes.button}>\n                          Create Group\n                        </Button>\n                      </div>\n                    </form>\n                  )}\n                </Formik>\n\n\n                <Typography style={{marginTop: '4vh', marginBottom: '4vh'}}>\n                  <Link to=\"/groups/join-group\" style={{ textDecoration: 'none', color: '#4f92ff'}}>\n                    You can join a group that's already been created by clicking here.\n                  </Link>\n                </Typography>\n\n\n                {this.props.groupExistsErr ?\n                  <div>\n                    <Typography style={{paddingTop: '2vh', color: 'red', fontWeight: 'bold'}}>There's already a group with that name. Try changing the name of the group.</Typography>\n                  </div>\n                  :\n                  null\n                  }\n              </Container>\n            </Grid>\n          </Grid>\n        </Box>  \n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  const { user: {user_info, loggedIn, connectionErr }, group: {groupExistsErr } } = state;\n\n  return {\n    user_info: user_info,\n    loggedIn: loggedIn,\n    groupExistsErr: groupExistsErr,\n    connectionErr: connectionErr\n  }\n}\n\nconst mapDispatchToProps = {\n  groupExistsError,\n  connectionError,\n  createGroupSuccess, \n  joinGroupSuccess\n}\n\n\nconst CreateGroupScreen = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(CreateGroup);\n\n\nexport default withStyles(styles)(CreateGroupScreen);","import React, {Component} from 'react';\nimport { Formik } from 'formik';\nimport axios from 'axios';\nimport { connect } from 'react-redux';\nimport { connectionError } from '../../actions/UserActions';\nimport { joinGroupError, joinGroupSuccess, createGroupSuccess } from '../../actions/GroupActions';\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\nimport { withStyles } from '@material-ui/styles';\nimport { Button, Container, Box, Typography, TextField, Grid } from '@material-ui/core';\n\nconst styles = {\n  root: {\n    background: '#fff',\n    margin: 'auto',\n    // height: '100vh',\n    // paddingTop: '15vh'\n  },\n  form: {\n    background: '#fff',\n    textAlign: 'center',\n    borderRadius: 5\n  },\n  title: {\n    paddingTop: '5vh',\n  },\n  link: {\n    margin: '4vh',\n  },\n  textInput: {\n    margin: '1vh',\n    width: '80%',\n    '& label.Mui-focused': {\n      color: '#4f92ff',\n    },\n    '& .MuiInput-underline:after': {\n      borderBottomColor: '#4f92ff',\n    },\n    // '& .MuiOutlinedInput-root': {\n    //   '& fieldset': {\n    //     borderColor: 'red',\n    //   },\n    //   '&:hover fieldset': {\n    //     borderColor: 'yellow',\n    //   },\n    //   '&.Mui-focused fieldset': {\n    //     borderColor: 'green',\n    //   },\n    // }\n  },\n  button: {\n    background: 'linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)',\n    border: 0,\n    borderRadius: 3,\n    boxShadow: '0 3px 5px 2px rgba(255, 105, 135, .3)',\n    color: 'white',\n    height: 48,\n    // width: '25%',\n    padding: '0 30px',\n    margin: '5vh',\n    marginTop: '7vh'\n  },\n};\n\nclass JoinGroup extends Component {\n  constructor(props) {\n    super(props)\n    this.state={\n      groupJoined: false\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    if(prevProps.loggedIn !== this.props.loggedIn) {\n      this.props.history.push('/profile')\n    }\n  }\n\n  JoinGroup = (data) => {\n    const component = this;\n\n    // console.log('CLIENT GROUP DATA:', data)\n\n    axios.post('http://localhost:3001/api/joinGroup', {\n      data: {\n        uid: data.uid,\n        name: data.name.toLowerCase().trim(),\n        email: data.email.toLowerCase().trim(),\n        group: data.group.toLowerCase().trim(),\n        password: data.password.trim()\n      }\n    })\n    .then(function (response) {\n      // console.log('AXIOS RESPONSE:', response)\n      if(response.data._id){\n        component.props.joinGroupSuccess();\n        component.props.createGroupSuccess();\n        component.setState({\n          groupJoined: !component.state.groupJoined\n        });\n        setTimeout(function() {\n          component.props.history.push('/groups/my-groups')\n        }, 1500)\n      }\n      else if(!response.data._id){\n        // console.log('JOIN GROUP ERROR', response)\n        component.props.joinGroupError(response.data);\n      }\n    })\n    .catch(function (error) {\n      // console.log('AXIOS ERROR:', error)\n      component.props.connectionError(error);\n    })\n  }\n\n\n  render() {\n    const {user_info, classes } = this.props;\n\n    return (\n      this.state.groupJoined ? \n        <Container style={{ marginTop: '5vh'}}>\n          <Typography variant='h5'>You have joined the group!</Typography>\n        </Container>\n        :\n        <Box className={classes.root}>\n          <Grid container justify={'center'}>\n            <Grid item xl ={6} lg={7} md={10} xs={12}>\n              <Container className={classes.form}>\n                <Formik\n                  initialValues={{ uid: user_info._id, name: user_info.name, email: user_info.email, group: '',  password: '' }}\n                  validate={values => {\n                    let errors = {};\n                    if (!values.name) {\n                      errors.name = 'Required';\n                    }\n                    return errors;\n                  }}\n                  onSubmit={(values, { setSubmitting }) => {\n                    this.JoinGroup(values);\n                  }}\n                >\n                  {({\n                    values,\n                    errors,\n                    touched,\n                    handleChange,\n                    handleBlur,\n                    handleSubmit,\n                    isSubmitting\n                  }) => (\n                    <form onSubmit={handleSubmit}>\n                      {errors.admin}\n                        <Typography variant='h5' className={classes.title}>Join Group</Typography>\n                      {/* <div>\n                        <TextField\n                          required\n                          type=\"name\"\n                          name=\"name\"\n                          id=\"standard-required\"\n                          label=\"Your Name\"\n                          placeholder={'Your Name'}\n                          onChange={handleChange}\n                          onBlur={handleBlur}\n                          value={values.name}\n                          className={classes.textInput}\n                        />\n                      </div> */}\n\n                      <div>\n                        {/* <Typography variant='h5' className={classes.title}>Group Name</Typography> */}\n                        <TextField\n                          required\n                          type=\"name\"\n                          name=\"group\"\n                          id=\"standard-required\"\n                          label=\"Group Name\"\n                          placeholder={'Group Name'}\n                          onChange={handleChange}\n                          onBlur={handleBlur}\n                          value={values.group}\n                          className={classes.textInput}\n                        />\n                      </div>\n                      <div>\n                        {/* <Typography style={{color: 'red'}}>{errors.group}</Typography> */}\n                      </div>\n                      <div>\n                        {/* <Typography variant='h5' className={classes.title}>Password</Typography> */}\n                        <TextField\n                          required\n                          type=\"password\"\n                          name=\"password\"\n                          id=\"standard-password-input\"\n                          label=\"Password\"\n                          placeholder={'Password'}\n                          onChange={handleChange}\n                          onBlur={handleBlur}\n                          value={values.password}\n                          className={classes.textInput}\n                        />\n                      </div>\n                      <div>\n                        {/* <Typography style={{color: 'red'}}>{errors.password}</Typography> */}\n                      </div>\n                      <div>\n                        <Button type=\"submit\" className={classes.button}>\n                          Join Group\n                        </Button>\n                      </div>\n                    </form>\n                  )}\n                </Formik>\n\n                <Typography className={classes.link}>\n                  <Link to=\"/groups/create-group\" style={{ textDecoration: 'none', color: '#4f92ff' }}>\n                    Haven't created a group? You can create one here.\n                  </Link>\n                </Typography>\n\n                {this.props.joinGroupErr ?\n                  <div>\n                    <Typography style={{paddingTop: '2vh', color: 'red', fontWeight: 'bold'}}>\n                      {this.props.joinGroupErr}\n                    </Typography>\n                  </div>\n                  :\n                  null\n                  }\n            </Container>\n            </Grid>\n          </Grid>\n        </Box>  \n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  const { user: {user_info, loggedIn, connectionErr }, group: {joinGroupErr }  } = state;\n\n  return {\n    user_info: user_info,\n    loggedIn: loggedIn,\n    joinGroupErr: joinGroupErr,\n    connectionErr: connectionErr\n  }\n}\n\nconst mapDispatchToProps = {\n  joinGroupError,\n  connectionError,\n  joinGroupSuccess,\n  createGroupSuccess\n}\n\n\nconst JoinGroupScreen = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(JoinGroup);\n\n\nexport default withStyles(styles)(JoinGroupScreen);","import React, {Component} from 'react';\nimport { Formik } from 'formik';\nimport axios from 'axios';\nimport { connect } from 'react-redux';\nimport { login, userExistsError, connectionError} from '../../actions/UserActions';\nimport { withStyles } from '@material-ui/styles';\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\nimport { \n  Button, \n  Container, \n  CircularProgress,\n  Chip,\n  Box, \n  Dialog, \n  DialogActions, \n  DialogContent, \n  DialogContentText, \n  DialogTitle,\n  Typography, \n  TextField, \n  Card, \n  Grid, \n  Menu, \n  MenuItem, \n  ExpansionPanel, \n  ExpansionPanelSummary, \n  ExpansionPanelDetails } from '@material-ui/core';\nimport SettingsIcon from '@material-ui/icons/Settings';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport HighlightOffIcon from '@material-ui/icons/HighlightOff';\n\nconst styles = {\n  root: {\n    background: '#4f92ff',\n    margin: 'auto',\n    height: '100vh',\n    paddingTop: '15vh'\n  },\n  container: {\n    background: '#fff',\n    textAlign: 'center',\n    marginTop: '3vw'\n  },\n  form: {\n    background: '#fff',\n    textAlign: 'center',\n    width: '50%',\n    height: '80%',\n    borderRadius: 5\n  },\n  title: {\n    margin: '1vh',\n  },\n  subText: {\n    margin: '2vh',\n    color: '#b8b8b8'\n  },\n  card: {\n    padding: '2vh',\n  },\n  textInput: {\n    margin: '1vh',\n    width: '80%'\n  },\n  button: {\n    margin: '2vh'\n  },\n  icon: {\n    margin: 5,\n    color: '#b8b8b8',\n    cursor: 'pointer',\n    position: 'absolute'\n  },\n  deleteIcon: {\n    height: '20px',\n    width: '20px',\n    cursor: 'pointer'\n  },\n  drawButton: {\n    color: '#4f92ff',  \n    borderColor: '#4f92ff', \n    backgroundColor: 'white', \n    margin: '4vh'\n  },\n  delete: {\n    color: 'red'\n  },\n  panel: {\n    marginTop: '2vh',\n    borderWidth: '0px',\n    boxShadow: '0 0 0 0',\n    // background: 'red'\n  },\n  link: {\n    background: 'linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)',\n    display: 'inline-flex',\n    height: '50px',\n    width: '25vh',\n    padding: '0 30px',\n    margin: '4vw'\n  },\n};\n\nclass Groups extends Component {\n  constructor(props) {\n    super(props)\n    this.state={\n      userGroups: [],\n      selectedUsersData: [],\n      selectedUserId: null,\n      selectedUserName: null,\n      selectUserErr: false,\n      registrationError: false,\n      connectionError: false,\n      anchorEl: null,\n      deleteUserModal: false,\n      removeUserModal: false,\n      resetDrawingModal: false,\n      deleteGroupModal: false,\n      groupId: null,\n      deleteUid: null,\n      loading: null\n    }\n  }\n\n\n  componentDidMount() {\n    // this.setState({\n    //   selectedUserId: this.props.user_info.uidSelected,\n    //   selectedUserName: this.props.user_info.selectedUserName\n    // }, () => {\n    //   console.log('SELECTED USER:', this.state.selectedUserName)\n      this.getUserGroups(this.props.user_info._id);\n      // this.getSelectedUsersData(this.state.selectedUserId);\n    // })\n    \n  }\n\n  componentDidUpdate(prevProps) {\n    if(prevProps.loggedIn !== this.props.loggedIn) {\n      this.props.history.push('/profile');\n    }\n  }\n  \n  openOptionsMenu = (event) => {\n    // console.log('EVENT::', event.currentTarget.getAttribute('groupid'))\n    this.setState({\n      anchorEl: event.currentTarget,\n      groupId: event.currentTarget.getAttribute('groupid')\n    })\n  }\n  \n  closeOptionsMenu = () => {\n    this.setState({\n      anchorEl: null,\n      groupId: null\n    })\n  }\n\n  openDeleteModal = (groupId, memberId) => {\n    // console.log('Group:::', groupId)\n    // console.log('User:::', memberId)\n    // console.log('OPENING DELETE MODAL')\n    this.setState({\n      deleteUserModal: true,\n      deleteUid: memberId,\n      groupId: groupId\n    })\n  };\n\n  closeDeleteModal = () => {\n    this.setState({\n      deleteUserModal: false,\n      deleteUid: null,\n      groupId: null\n    })\n  };\n  \n  openRemoveModal = (groupId, memberId) => {\n    // console.log('Group:::', groupId)\n    // console.log('User:::', memberId)\n    // console.log('OPENING REMOVE MODAL')\n    this.setState({\n      removeUserModal: true,\n      deleteUid: memberId,\n      groupId: groupId\n    })\n  };\n\n  closeRemoveModal = () => {\n    this.setState({\n      removeUserModal: false,\n      deleteUid: null,\n      groupId: null\n    })\n  };\n\n  openResetDrawingModal = (groupId) => {\n    // console.log('Group:::', groupId)\n    // console.log('User:::', memberId)\n    // console.log('OPENING REMOVE MODAL')\n    this.setState({\n      resetDrawingModal: true,\n      groupId: groupId\n    })\n  };\n\n  closeResetDrawingModal = () => {\n    this.setState({\n      resetDrawingModal: false,\n      deleteUid: null,\n      groupId: null\n    })\n  };\n\n  \n  openDeleteGroupModal = (groupId) => {\n    // console.log('Group:::', groupId)\n    // console.log('User:::', memberId)\n    // console.log('OPENING REMOVE MODAL')\n    this.setState({\n      deleteGroupModal: true,\n      groupId: groupId\n    })\n  };\n\n  closeDeleteGroupModal = () => {\n    this.setState({\n      deleteGroupModal: false,\n      groupId: null\n    })\n  };\n\n\n  getUserGroups = (userId) => {\n    this.setState({\n      loading: true\n    })\n\n    axios.get('http://localhost:3001/api/getUserGroups', {\n      params: {\n        user_id: userId\n      }\n    })\n      .then((res) => {\n        this.setState({ userGroups: res.data, loading: false })\n    })\n    .catch(error => {\n      // console.log('AXIOS GET USER GROUPS ERROR', error)\n    })\n  };\n\n  getSelectedUsersData = (id) => {\n    axios.get('http://localhost:3001/api/getSelectedUsersItems', {\n      params: {\n        user_id: id\n      }\n    })\n      .then((res) => this.setState({ selectedUsersData: res.data }))\n  };\n\n\n  deleteGroup = (idTodelete) => {\n    let component = this;\n\n    this.setState({\n      anchorEl: null,\n      groupId: null\n    })\n\n    // console.log('ID OF GROUP>', idTodelete)\n    axios.delete('http://localhost:3001/api/deleteGroup', {\n      data: {\n        _id: idTodelete,\n      },\n    })\n    .then(function (response) {\n      // console.log('AXIOS RESPONSE:', response)\n      component.closeDeleteGroupModal();\n      component.getUserGroups(component.props.user_info._id);\n    })\n    .catch(function (error) {\n      // console.log('AXIOS ERROR:', error)\n    })\n    ;\n  };\n  \n  clearSelections = (groupId, removingMember) => {\n    let component = this;\n\n    this.setState({\n      anchorEl: null,\n      groupId: null\n    })\n\n    // console.log('ID OF GROUP>', idTodelete)\n    axios.post('http://localhost:3001/api/clearSelections', {\n      data: {\n        group_id: groupId,\n        removingMember: removingMember\n      },\n    })\n    .then(function (response) {\n      // console.log('AXIOS RESPONSE:', response)\n      component.closeResetDrawingModal();\n      component.getUserGroups(component.props.user_info._id);\n    })\n    .catch(function (error) {\n      // console.log('AXIOS ERROR:', error)\n    })\n    ;\n  };\n\n  removeMember = (groupId, userId) => {\n    let component = this;\n\n    axios.delete('http://localhost:3001/api/removeMember', {\n      data: {\n        group_id: groupId,\n        uid: userId,\n      },\n    })\n    .then(function (response) {\n      console.log('AXIOS RESPONSE:', response)\n      component.closeDeleteModal();\n      component.closeRemoveModal();\n      component.clearSelections(groupId, true);\n      component.getUserGroups(component.props.user_info._id);\n    })\n    .catch(function (error) {\n      // console.log('AXIOS ERROR:', error)\n    })\n    ;\n  };\n\n  drawName = (groupId, userId) => {\n    let component = this;\n\n    // console.log('GROUP ID:', groupId)\n    // console.log('USER ID:', userId)\n    axios.post('http://localhost:3001/api/selectUser', {\n      group_id: groupId,\n      user_id: userId\n    })\n    .then(function (response) {\n      // console.log('DRAW NAME AXIOS RESPONSE:', response)\n       if (response.data === '') {\n          // console.log('SELECT USER ERROR!!')\n      }\n      else {\n        // console.log('USER SELECTED:', response)\n        component.getUserGroups(component.props.user_info._id);\n        // component.getSelectedUsersData(response.data._id);\n      }\n        \n    })\n    .catch(function (error) {\n      // console.log('DRAW NAME AXIOS ERROR:', error)\n    })\n  } \n\n  render() {\n    const { user_info, classes } = this.props;\n    \n    return (\n      <div>\n          {this.state.loading ?\n            <Container style={{height: '20vh', marginTop: '10vh'}}>\n              <CircularProgress style={{color:'#ff476f'}}/>\n            </Container>\n            :\n            <div>\n              <Grid \n                container  \n                wrap='wrap' \n                direction='row' \n                // alignContent={'center'} \n                // alignItems={'flex-start'} \n                spacing={3}\n              >\n                {this.state.userGroups.length <= 0 && this.state.loading === false ? \n                  <Container style={{height: '20vh', marginTop: '10vh'}}>\n                    <Typography variant='h4'>You haven't joined any groups yet!</Typography>\n                    <Typography variant='body1'>When you create or join a group, it will show up here.</Typography>\n                  </Container>\n                  :\n                  this.state.userGroups.map((group, idx) => {\n                    let groupName = group.name;\n                    const upperCaseGroup = groupName.replace(/^\\w/, c => c.toUpperCase());\n\n                    return (\n                      <Grid item xs={12} md={6} lg={4} key={group._id}>\n                        <Card className={classes.card} style={{minHeight: '30vh'}} key={idx}>\n                          <Grid container>\n                            <Grid item style={{ flex: 1 }}>\n                              <Typography variant='h4' className={classes.title} key={idx}>{upperCaseGroup}</Typography>\n                            </Grid>\n                            {group.admin === user_info._id ?\n                              <Grid item style={{ position:'relative', right: 25, bottom: 10 }}>\n                                <SettingsIcon className={classes.icon} groupid={group._id} aria-controls=\"simple-menu\" aria-haspopup=\"true\" onClick={(event) => this.openOptionsMenu(event)} />\n                                <Menu\n                                  id=\"simple-menu\"\n                                  anchorEl={this.state.anchorEl}\n                                  keepMounted\n                                  transformOrigin={{horizontal: 'right', vertical: -30}}\n                                  open={Boolean(this.state.anchorEl)}\n                                  onClose={this.closeOptionsMenu}\n                                >\n                                  <MenuItem onClick={() => this.openResetDrawingModal(this.state.groupId)}>Reset Drawing</MenuItem>\n                                  <MenuItem onClick={() => this.openDeleteGroupModal(this.state.groupId)} className={classes.delete}>Delete Group</MenuItem>\n                                </Menu>\n                              </Grid>\n                              :\n                              null\n                            }\n                          </Grid>\n\n                          {group.memberCount !== 0 ?\n                            group.memberCount === 1 ?\n                              <Typography variant='body1' key={idx}>{group.memberCount} spot left</Typography>\n                              :\n                              <Typography variant='body1' key={idx}>{group.memberCount} spots left</Typography>\n                          :\n                            null\n                          }\n\n                          <ExpansionPanel className={classes.panel}>\n                            <ExpansionPanelSummary\n                              expandIcon={<ExpandMoreIcon />}\n                              aria-controls=\"panel1a-content\"\n                              id=\"panel1a-header\"\n                            >\n                              <Typography variant='h6'>Members</Typography>\n                            </ExpansionPanelSummary>\n                              <ExpansionPanelDetails>\n                                <Grid \n                                  container  \n                                  wrap='wrap' \n                                  direction='row' \n                                  alignContent={'flex-start'} \n                                  alignItems={'flex-start'} \n                                  spacing={3}\n                                >\n                                  {group.members.map((member, index) => {\n\n                                    //member is NOT current user and current user is the group admin\n                                    if ((member.uid !== user_info._id) && (group.admin === user_info._id)) {\n                                      return (\n                                        <div key={index}>\n                                          {member.selectedBy === this.props.user_info._id ?\n                                            <Grid item style={{margin: '1vh'}}>\n                                              <Chip label={member.name.toUpperCase()} style={{backgroundColor: '#4f92ff', color: 'white'}} onDelete={() => this.openDeleteModal(group._id, member.uid)} />\n                                            </Grid>\n                                            :\n                                            <Grid item style={{margin: '1vh'}}>\n                                              <Chip label={member.name.toUpperCase()} onDelete={() => this.openDeleteModal(group._id, member.uid)} />\n                                            </Grid>\n                                          }\n                                        </div>\n                                        )\n                                    }\n                                    \n                                    //member is current user and current user is NOT the group admin\n                                    else if ((member.uid === user_info._id) && (group.admin !== user_info._id)) {\n                                      return (\n                                        <div key={index}>\n                                            <Grid item style={{margin: '1vh'}}>\n                                              <Chip label={member.name.toUpperCase()} onDelete={() => this.openRemoveModal(group._id, member.uid)}/>\n                                            </Grid>\n                                        </div>\n                                        )\n                                    }\n                                    else {\n                                      return (\n                                        <div key={index}>\n                                          {member.selectedBy === this.props.user_info._id ?\n                                            <Grid item style={{margin: '1vh'}}>\n                                              <Chip style={{backgroundColor: '#4f92ff', color: 'white'}} label={member.name.toUpperCase()}/>\n                                            </Grid>\n                                            :\n                                            <Grid item style={{margin: '1vh'}}>\n                                              <Chip label={member.name.toUpperCase()} />\n                                            </Grid>\n                                          }\n                                        </div>\n                                        )\n                                    }\n                                  })}\n                                </Grid>\n                              </ExpansionPanelDetails>\n                          </ExpansionPanel>\n\n\n                          {group.memberCount !== 0 ?\n                            <div>\n                              <Typography variant='body1' className={classes.subText}>Once everyone joins the group, you can draw a name here.</Typography>\n                            </div>\n                            :\n                            null\n                            }\n\n\n                            {group.members.map((member, index) => {\n\n                              if(member.uid === this.props.user_info._id && member.uidSelected === null && group.memberCount === 0) {\n                                return (\n                                  <div key={index}>\n                                    <Button \n                                      variant=\"outlined\"\n                                      disabled={false} \n                                      className={classes.drawButton} \n                                      onClick={() => this.drawName(group._id, this.props.user_info._id)}\n                                    >\n                                      <Typography>\n                                        Draw\n                                      </Typography>\n                                    </Button>\n                                  </div>\n                                )\n                              }\n                              \n                              else if(member.selectedBy === this.props.user_info._id) {\n                                return (\n                                  <Container key={index}>\n                                    <Typography style={{margin: '4vh'}}>\n                                      You drew {' '}\n                                        <Link  \n                                          to={{\n                                            pathname: `/wish-list/${member.uid}`,\n                                            state: {\n                                              user: member.name\n                                            }\n                                          }}\n                                          style={{textDecoration: 'none'}}> \n                                            <Chip style={{backgroundColor: '#4f92ff', color: 'white', cursor:'pointer'}} label={member.name.toUpperCase()}/>\n                                          </Link>\n                                      </Typography>\n                                      <Typography className={classes.subText}>You can click their name to see their wish list.</Typography>\n                                  </Container>\n                                )\n                              }\n                            })}\n\n                        </Card>\n                      </Grid>\n                    )\n                  })}\n                </Grid>\n\n                <Container xs={12} m={6} lg={6} className={classes.container}>\n                  <Link to=\"/groups/create-group\" style={{ textDecoration: 'none', color: '#fff'}}>\n                    <Button  className={classes.link}>\n                        <Typography style={{color:'#fff'}}>Create Group</Typography>\n                    </Button>\n                  </Link>\n                  \n                  <Link to=\"/groups/join-group\" style={{ textDecoration: 'none', color: '#fff'}}>\n                    <Button className={classes.link}>\n                        <Typography style={{color:'#fff'}}>Join Group</Typography>\n                    </Button>\n                  </Link>\n                </Container>\n\n\n                {/* deleting member modal */}\n                <Dialog\n                    open={this.state.deleteUserModal}\n                    onClose={this.closeDeleteModal}\n                    aria-labelledby=\"alert-dialog-title\"\n                    aria-describedby=\"alert-dialog-description\"\n                  >\n                    <DialogTitle id=\"alert-dialog-title\">{\"Delete Member?\"}</DialogTitle>\n                    <DialogContent>\n                      <DialogContentText id=\"alert-dialog-description\">\n                        <Typography style={{textAlign: 'center'}}>Are you sure you want to delete this member from the group?</Typography>\n                        <Typography style={{textAlign: 'center', fontWeight: 'bold'}}>This will reset the drawing for the entire group.</Typography>\n                      </DialogContentText>\n                    </DialogContent>\n                    <DialogActions>\n                      <Button onClick={() => this.removeMember(this.state.groupId, this.state.deleteUid)} color=\"secondary\">\n                        Delete\n                      </Button>\n                      <Button onClick={ () => this.closeDeleteModal()} style={{color: '#6b6b6b'}} autoFocus>\n                        Close\n                      </Button>\n                    </DialogActions>\n                  </Dialog>\n\n                {/* leaving group modal */}\n                <Dialog\n                  open={this.state.removeUserModal}\n                  onClose={this.closeRemoveModal}\n                  aria-labelledby=\"alert-dialog-title\"\n                  aria-describedby=\"alert-dialog-description\"\n                >\n                  <DialogTitle id=\"alert-dialog-title\">{\"Leave Group?\"}</DialogTitle>\n                  <DialogContent>\n                    <DialogContentText id=\"alert-dialog-description\">\n                      <Typography style={{textAlign: 'center'}}> Are you sure you want to leave this group? </Typography>\n                      <Typography style={{textAlign: 'center', fontWeight: 'bold'}}>This will reset the drawing for the entire group.</Typography>\n                    </DialogContentText>\n                  </DialogContent>\n                  <DialogActions>\n                    <Button onClick={() => this.removeMember(this.state.groupId, this.state.deleteUid)} color=\"secondary\">\n                      Leave Group\n                    </Button>\n                    <Button onClick={() => this.closeRemoveModal()} style={{color: '#6b6b6b'}}  autoFocus>\n                      Close\n                    </Button>\n                  </DialogActions>\n                </Dialog>\n                \n                {/* reset drawing modal */}\n                <Dialog\n                  open={this.state.resetDrawingModal}\n                  onClose={this.closeResetDrawingModal}\n                  aria-labelledby=\"alert-dialog-title\"\n                  aria-describedby=\"alert-dialog-description\"\n                >\n                  <DialogTitle id=\"alert-dialog-title\">{\"Reset Drawing?\"}</DialogTitle>\n                  <DialogContent>\n                    <DialogContentText id=\"alert-dialog-description\">\n                      <Typography style={{textAlign: 'center'}}> Are you sure you want to reset the drawing for this group? </Typography>\n                    </DialogContentText>\n                  </DialogContent>\n                  <DialogActions>\n                    <Button onClick={() => this.clearSelections(this.state.groupId, false)} color=\"secondary\">\n                      Reset\n                    </Button>\n                    <Button onClick={() => this.closeResetDrawingModal()} style={{color: '#6b6b6b'}}  autoFocus>\n                      Close\n                    </Button>\n                  </DialogActions>\n                </Dialog>\n                \n                {/* delete group modal */}\n                <Dialog\n                  open={this.state.deleteGroupModal}\n                  onClose={this.closeDeleteGroupModal}\n                  aria-labelledby=\"alert-dialog-title\"\n                  aria-describedby=\"alert-dialog-description\"\n                >\n                  <DialogTitle id=\"alert-dialog-title\">{\"Delete Group?\"}</DialogTitle>\n                  <DialogContent>\n                    <DialogContentText id=\"alert-dialog-description\">\n                      <Typography style={{textAlign: 'center'}}> Are you sure you want to delete this group? </Typography>\n                    </DialogContentText>\n                  </DialogContent>\n                  <DialogActions>\n                    <Button onClick={() => this.deleteGroup(this.state.groupId)} color=\"secondary\">\n                      Delete Group\n                    </Button>\n                    <Button onClick={() => this.closeDeleteGroupModal()} style={{color: '#6b6b6b'}}  autoFocus>\n                      Close\n                    </Button>\n                  </DialogActions>\n                </Dialog>\n            </div>\n          }\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  const { user: {user_info, loggedIn, userExistsErr, connectionErr } } = state;\n\n  return {\n    user_info: user_info,\n    loggedIn: loggedIn,\n    userExistsErr: userExistsErr,\n    connectionErr: connectionErr\n  }\n}\n\nconst mapDispatchToProps = {\n  login,\n  userExistsError,\n  connectionError\n}\n\n\nconst GroupsScreen = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Groups);\n\n\nexport default withStyles(styles)(GroupsScreen);","import React, {Component} from 'react';\nimport { Formik } from 'formik';\nimport axios from 'axios';\nimport { connect } from 'react-redux';\nimport { login, userExistsError, connectionError} from '../../actions/UserActions';\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\nimport CreateGroup from './CreateGroup';\nimport JoinGroup from './JoinGroup';\nimport MyGroups from './MyGroups';\nimport { withStyles } from '@material-ui/styles';\nimport { Button, Container, Box, Typography, TextField, Card, CardActionArea } from '@material-ui/core';\n  \nconst styles = {\n  root: {\n    background: '#fff',\n    margin: 'auto',\n    height: '100vh'\n  },\n  container: {\n    background: '#fff',\n    textAlign: 'center',\n    width: '75%',\n    marginTop: '5vh'\n  },\n  title: {\n    paddingTop: '5vh',\n  },\n  link: {\n    margin: '2vh',\n  },\n  textInput: {\n    margin: '1vh',\n    width: '80%'\n  },\n  \n};\n\nclass Groups extends Component {\n  constructor(props) {\n    super(props)\n  }\n\n  componentDidUpdate(prevProps) {\n    if(prevProps.loggedIn !== this.props.loggedIn) {\n      this.props.history.push('/profile')\n    }\n  }\n  \n\n  createGroup = (data) => {\n    const component = this;\n\n    axios.post('http://localhost:3001/api/newUser', {\n      data\n    })\n    .then(function (response) {\n      // console.log('AXIOS RESPONSE:', response)\n      if(response.data._id){\n        component.props.login(response.data)\n      }\n      else if(!response.data._id){\n        component.props.userExistsError();\n      }\n    })\n    .catch(function (error) {\n      // console.log('AXIOS ERROR:', error)\n      component.props.connectionError(error);\n    })\n  }\n\n  getUsersGroups = (userId) => {\n      \n  }\n\n  render() {\n    const {classes} = this.props;\n\n    return (\n        <Box className={classes.root}>\n            <Container className={classes.container}>\n              <Route path='/groups/my-groups' render = {(props) => <MyGroups {...props}  /> }/>\n              <Route path='/groups/create-group' render = {(props) => <CreateGroup {...props}  /> }/>\n              <Route path='/groups/join-group' render = {(props) => <JoinGroup {...props}  /> } />\n            </Container>\n        </Box>\n\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  const { user: {user_info, loggedIn, userExistsErr, connectionErr } } = state;\n\n  return {\n    user_info: user_info,\n    loggedIn: loggedIn,\n    userExistsErr: userExistsErr,\n    connectionErr: connectionErr\n  }\n}\n\nconst mapDispatchToProps = {\n  login,\n  userExistsError,\n  connectionError\n}\n\n\nconst GroupsScreen = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Groups);\n\n\nexport default withStyles(styles)(GroupsScreen);","// /client/App.js\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport { Formik } from 'formik';\nimport { connect } from 'react-redux';\nimport { withStyles } from '@material-ui/styles';\nimport { \n  Button, \n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogContentText,\n  DialogTitle,\n  Grid,\n  Container, \n  ExpansionPanel,\n  ExpansionPanelDetails,\n  ExpansionPanelSummary,\n  Box, \n  Link,\n  Typography, \n  TextField, \n  CircularProgress\n} from '@material-ui/core';\nimport { Link as DomLink } from \"react-router-dom\";\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\n\n\nconst styles = {\n  root: {\n    background: '#fff',\n    margin: 'auto',\n    height: '100vh'\n  },\n  container: {\n    background: '#fff',\n    textAlign: 'center',\n    width: '75%',\n    marginTop: '5vh'\n  },\n  form: {\n    background: '#fff',\n    textAlign: 'center',\n    width: '50%',\n    height: '65vh',\n    borderRadius: 5\n  },\n  title: {\n    paddingTop: '5vh',\n  },\n  link: {\n    marginTop: '5vh',\n    color: '#4f92ff',\n    textDecoration: 'underline'\n  },\n  textInput: {\n    margin: '1vh',\n    width: '80%'\n  },\n  heading: {\n    // fontSize: '4vh'\n  },\n  details: {\n    backgroundColor: '#d1d1d1'\n  },\n  drawButton: {\n    color: '#4f92ff',  \n    borderColor: '#4f92ff'\n  },\n  button: {\n    background: 'linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)',\n    border: 0,\n    borderRadius: 3,\n    boxShadow: '0 3px 5px 2px rgba(255, 105, 135, .3)',\n    color: 'white',\n    height: 48,\n    width: '25%',\n    padding: '0 30px',\n    margin: '5vh'\n  },\n};\n\nclass WishList extends Component {\n  // initialize our state\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: [],\n      user_id: null,\n      userName: null,\n      description: null,\n      link: null,\n      notes: null,\n      itemToUpdate: null,\n      updateItemForm: false,\n      addItemForm: false,\n      formError: false,\n      panel: null,\n      panelOpen: false,\n      linkError: false,\n      loading: false\n    }\n  }\n\n  componentDidMount() {\n    // console.log('WISHLIST PROPS:', this.props)\n\n    this.setState({\n      user_id: this.props.match.params.id,\n      userName: this.props.location.state.user\n    }, () => {\n      this.getUserData(this.state.user_id);\n      // this.getSelectedUsersData(this.state.selectedUserId);\n    })\n  }\n \n  // componentDidUpdate(prevProps) {\n  //   if(this.props !== prevProps) {\n  //     console.log('PROFILE NEW PROPS:', this.props)\n  //   }\n  // }\n\n  expandPanel = (panel) => {\n    this.setState({\n      panel: panel,\n      panelOpen: !this.state.panelOpen\n    })\n  }\n\n\n  getUserData= (userId) => {\n    this.setState({\n      loading: true\n    })\n\n    axios.get('http://localhost:3001/api/getItems', {\n      params: {\n        user_id: userId\n      }\n    })\n      .then((res) => this.setState({ data: res.data, loading: false}))\n  };\n\n\n\n  render() {\n    const { data } = this.state;\n    const { classes } = this.props;\n\n    let userName;\n    let upperCaseName;\n    if(this.state.userName) {\n      userName = this.state.userName;\n      upperCaseName = userName.replace(/^\\w/, c => c.toUpperCase());\n    }\n\n    return (\n      <div>\n        {this.state.loading ? \n          <Box className={classes.root}>\n            <Container className={classes.container} style={{marginTop: '10vh'}}>\n              <CircularProgress style={{color:'#ff476f'}} />\n            </Container>\n          </Box>\n        :\n          <Box className={classes.root}>\n            <Container className={classes.container}>\n              {data.length <= 0 ? \n                <Container style={{height: '10vh', marginTop: '10vh'}}>\n                  <Typography variant=\"h5\">{upperCaseName} hasn't added any items to their list yet</Typography>\n                </Container>\n                : \n                [<Typography variant=\"h5\" style={{color: '#6b6b6b', marginBottom: '3vh'}}>{upperCaseName}'s Wishlist</Typography>,\n                data.map((item, index) => (\n                  <div key={item._id}>\n                      <ExpansionPanel \n                        style={this.state.panel === item._id && this.state.panelOpen ? {marginBottom: '4vh'} : {marginBottom: '2vh'}} \n                        expanded={this.state.panel === item._id && this.state.panelOpen} \n                        onChange={() => this.expandPanel(item._id)}>\n                        <ExpansionPanelSummary\n                          expandIcon={<ExpandMoreIcon />}\n                          aria-controls=\"panel1bh-content\"\n                          id=\"panel1bh-header\"\n                        >\n                          <Grid container justify={'flex-start'}>\n                            <Typography className={classes.heading}>\n                              <Link href= {item.link} onClick={() => this.preventDefault} target={'_blank'} className={classes.link}>\n                                {item.description}\n                              </Link>\n                            </Typography>\n                          </Grid>\n                        </ExpansionPanelSummary>\n                        <ExpansionPanelDetails className={classes.details}>\n                          <Typography>\n                            {item.notes}\n                          </Typography>\n                        </ExpansionPanelDetails>\n                      </ExpansionPanel>\n                    </div>\n                  ))]\n                }\n\n                <Container style={data.length > 0 ? {marginTop: '5vh'} : null }>\n                  <DomLink to=\"/groups/my-groups\" style={{ textDecoration: 'none', color: '#4f92ff' }}>\n                      <Button \n                        variant=\"outlined\"\n                        disabled={false} \n                        className={classes.drawButton} \n                      >\n                        <Typography>\n                          Go Back\n                        </Typography>\n                      </Button>\n                  </DomLink>\n                </Container>\n            </Container>\n          </Box>\n        }\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  const { user: {user_info, loggedIn} } = state;\n\n  return {\n    user_info: user_info, \n    loggedIn: loggedIn\n  }\n}\n\n\nconst WishListScreen = connect(\n  mapStateToProps,\n  null\n)(WishList);\n\n\nexport default withStyles(styles)(WishListScreen);","import React, {Component } from 'react';\nimport Navbar from './Components/Navbar';\nimport Register from './Components/Register';\nimport Login from './Components/Login';\nimport Profile from './Components/Profile';\nimport Groups from './Components/Groups';\nimport WishList from './Components/WishList';\nimport { connect } from 'react-redux';\n\nimport {\n  HashRouter,\n  BrowserRouter as Router,\n  Route,\n  Link,\n  Redirect,\n  withRouter\n} from \"react-router-dom\";\n\n\nfunction PrivateRoute({ component: Component, ...rest }) {\n    return (\n      <Route\n        {...rest}\n        render={props =>\n           rest.loggedIn ? (\n            <Component {...props} {...rest} />\n          ) : (\n            <Redirect\n              to={{\n                pathname: \"/\",\n                state: { from: props.location }\n              }}\n            />\n          )\n        }\n      />\n    );\n  }\n  \n\nclass Main extends Component {\n    render() {\n        const {loggedIn, new_user} = this.props;\n        return (\n          <HashRouter basename='/'>\n            <Router>\n              <div>\n                {loggedIn ?\n                  <Navbar {...this.props} />\n                :\n                  null\n                }\n                <div>\n                    <Route path='/register' exact render = {(props) => <Register {...props}  /> } />\n                    <Route path='/profile' render = {(props) => loggedIn ? <Profile {...props} /> : <Redirect to='/'/> } />\n                    <Route path='/wish-list/:id' render = {(props) => loggedIn ? <WishList {...props} /> : <Redirect to='/'/> } />\n                    <Route path='/' exact render = {(props) => loggedIn ? <Redirect to='/groups/my-groups'/> : <Login {...props}  />} />\n                    <PrivateRoute path='/groups' {...this.props} component = {Groups} />\n                </div>\n              </div>\n            </Router>\n          </HashRouter>\n        ) \n    }\n}\n\nconst mapStateToProps = state => {\n    const { user: {user_info, loggedIn, new_user} } = state;\n    return {\n      user_info: user_info,\n      loggedIn: loggedIn,\n      new_user: new_user\n    }\n  }\n\n  const mapDispatchToProps = dispatch => {\n    return {\n      dispatch\n    }\n  }\n  \n  \n  const App = connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(Main);\n  \n  \n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import * as type from \"../actions/types\";\n\nconst initialState = {\n    user_info: null,\n    loggedIn: false,\n    loginErr: null,\n    connectionErr: null,\n    userExistsErr: null\n  };\n  \n\n  export default (state = initialState, action) => {\n    switch (action.type) {\n    case type.SET_USER_INFO: {\n      console.log('LOGIN INFO', action.payload)\n      return Object.assign({}, state, { user_info: action.payload, loggedIn: true, loginErr: null, connectionErr: null, userExistsErr: null });\n    }\n    \n    case type.LOGOUT_USER: {\n      return Object.assign({}, state, { user_info: null, loggedIn: false, loginErr: null, connectionErr: null, userExistsErr: null });\n    }\n  \n    case type.LOGIN_ERROR: {\n      return Object.assign({}, state, { loginErr: action.payload });\n    }\n  \n    case type.CONNECTION_ERROR: {\n      return Object.assign({}, state, { connectionErr: action.payload });\n    }\n  \n    case type.USER_EXISTS_ERROR: {\n      return Object.assign({}, state, { userExistsErr: action.payload });\n    }\n  \n    default:{\n      return state;\n    }\n  }\n}\n  ","import * as type from \"../actions/types\";\n\nconst initialState = {\n    groupExistsErr: null,\n    joinGroupErr: null\n  };\n  \n\n  export default (state = initialState, action) => {\n    switch (action.type) {\n    case type.CREATE_GROUP_SUCCESS: {\n      return Object.assign({}, state, { groupExistsErr: null });\n    }\n    case type.JOIN_GROUP_SUCCESS: {\n      return Object.assign({}, state, { joinGroupErr: null });\n    }\n    case type.GROUP_EXISTS_ERROR: {\n      return Object.assign({}, state, { groupExistsErr: true });\n    }\n    case type.JOIN_GROUP_ERROR: {\n      return Object.assign({}, state, { joinGroupErr: action.payload });\n    }\n    \n    default:{\n      return state;\n    }\n  }\n}\n  ","import { combineReducers } from 'redux';\nimport user from './UserReducer';\nimport item from './ItemReducer';\nimport group from './GroupReducer';\n\nexport default combineReducers({\n    item,\n    user,\n    group\n});\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { createStore } from 'redux';\nimport { Provider } from 'react-redux';\nimport XmasApp from './reducers/index';\nimport { Button, Container, Box } from '@material-ui/core';\n\nconst store = createStore(XmasApp);\n\nReactDOM.render(\n    <Provider store={store}>\n        <App /> \n    </Provider>,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}